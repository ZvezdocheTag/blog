{"componentChunkName":"component---node-modules-jxnblk-gatsby-theme-mdx-blog-src-templates-post-js","path":"/the-cascade-is-not-inheritance/","webpackCompilationHash":"e17fc85b2ab38f68e9e9","result":{"data":{"mdx":{"id":"727d204c-8dbc-563a-a969-97bdbcba381c","frontmatter":{"title":"The Cascade is Not Inheritance","date":"July 20, 2019","draft":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"The Cascade is Not Inheritance\",\n  \"date\": \"2019-07-20T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"On more than one occasion, I've heard people conflate the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"cascade\"), \" feature of CSS with \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"inheritance\"), \".\\nWhile it's an understandable thing to mix up because they are, in fact, related,\\nI think it's important to use the correct terms when talking about technology like this.\"), mdx(\"h2\", {\n    \"id\": \"inheritance\"\n  }, \"Inheritance\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Inheritance\"), \" is when a child element inherits styles from one of its parent elements.\\nSome (not all) CSS properties will automatically apply as a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"default value\"), \" for child elements.\\nThis allows you to set a font family and color at the top level of a page\\nand have all elements within that page use the same styles.\\nVery cool.\"), mdx(\"h2\", {\n    \"id\": \"the-cascade\"\n  }, \"The Cascade\"), mdx(\"p\", null, \"The \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Cascade\"), \" is the set of rules that a browser uses to determine which particular styles should apply to a given element,\\nwhen there are conflicting rules.\\nThis is, in my mind, the trickiest part of the CSS language and it trips people up all the time.\"), mdx(\"p\", null, \"The algorithm specified in CSS takes the following into consideration when applying styles:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.w3.org/TR/css-cascade-3/#cascade-origin\"\n  }), \"Origin and Importance\"), \", which includes author, user agent, and user stylesheets\", mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Transition declarations\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Important user agent declarations\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Important user declarations\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Important author declarations\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Animation declarations\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Normal author declarations\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Normal user declarations\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Normal user agent declarations\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.w3.org/TR/css-cascade-3/#cascade-specificity\"\n  }), \"Specificity\"), \", which is \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.w3.org/TR/selectors/#specificity-rules\"\n  }), \"calculated based on selectors\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.w3.org/TR/css-cascade-3/#cascade-order\"\n  }), \"Order of Appearance\"), \", which means the last declared rule wins\")), mdx(\"p\", null, \"This quote from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Cascade_and_inheritance\"\n  }), \"MDN's Introduction to CSS: Cascade and Inheritance\"), \" sums it up pretty well:\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"If you didn't fully understand the cascade, specificity, and inheritance, then don't worry! This is definitely the most complicated thing we've covered so far in the course, and is something that even professional web developers sometimes find tricky.\")));\n}\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"727d204c-8dbc-563a-a969-97bdbcba381c"}}}